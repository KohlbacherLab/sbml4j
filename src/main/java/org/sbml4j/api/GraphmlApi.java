/**
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech) (5.3.1). https://openapi-generator.tech Do
 * not edit the class manually.
 */
package org.sbml4j.api;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

import javax.validation.Valid;

import org.sbml4j.model.api.network.NetworkInventoryItem;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.
Generated(value = "org.openapitools.codegen.languages.SpringCodegen",
          date = "2022-04-02T23:09:46.842042+02:00[Europe/Berlin]")
@Validated
@Api(value = "Graphml", description = "the Graphml API")
public interface GraphmlApi {

  default Optional<NativeWebRequest> getRequest() { return Optional.empty(); }

  /**
   * POST /graphml : Upload GraphML file
   *
   * @param user The user which requests the creation, the configured public
   *     user will be used if omitted (optional)
   * @param parentUUID The UUID of the entity that this network originally
   *     derived from (optional)
   * @param networkname An optional name for the newly generated network
   *     (optional)
   * @param prefixName Flag whether to prefix the given networkname on the
   *     original network name (true) or use networkname as sole name for the
   *     created network (false) (optional, default to false)
   * @param suffixName Flag whether to suffix the given networkname on the
   *     original network name (true) or use networkname as sole name for the
   *     created network (false) (optional, default to false)
   * @param files  (optional)
   * @return Network from graphml created (status code 201)
   *         or Bad Request (status code 400)
   */

  @ApiOperation(value = "Upload GraphML file", nickname = "uploadGraphML",
                notes = "", response = NetworkInventoryItem.class,
                responseContainer = "List",
                tags =
                    {
                        "graphml",
                    })
  @ApiResponses(value =
                {
                  @ApiResponse(code = 201,
                               message = "Network from graphml created",
                               response = NetworkInventoryItem.class,
                               responseContainer = "List")
                  ,

                      @ApiResponse(code = 400, message = "Bad Request")
                })
  @RequestMapping(method = RequestMethod.POST, value = "/graphml",
                  produces = {"application/json"},
                  consumes = {"multipart/form-data"})
  default ResponseEntity<List<NetworkInventoryItem>>
  uploadGraphML(
      @ApiParam(
          value =
              "The user which requests the creation, the configured public user will be used if omitted")
      @RequestHeader(value = "user", required = false) String user,
      @ApiParam(
          value =
              "The UUID of the entity that this network originally derived from")
      @Valid @RequestParam(value = "parentUUID",
                           required = false) UUID parentUUID

      ,
      @ApiParam(value = "An optional name for the newly generated network")
      @Valid @RequestParam(value = "networkname",
                           required = false) String networkname

      ,
      @ApiParam(
          value =
              "Flag whether to prefix the given networkname on the original network name (true) or use networkname as sole name for the created network (false)",
          defaultValue = "false") @Valid
      @RequestParam(value = "prefixName", required = false,
                    defaultValue = "false") Boolean prefixName

      ,
      @ApiParam(
          value =
              "Flag whether to suffix the given networkname on the original network name (true) or use networkname as sole name for the created network (false)",
          defaultValue = "false") @Valid
      @RequestParam(value = "suffixName", required = false,
                    defaultValue = "false") Boolean suffixName

      ,

      @ApiParam(value = "") @Valid @RequestPart(value = "files",
                                                required = false)
      List<MultipartFile> files) {
    getRequest().ifPresent(request -> {
      for (MediaType mediaType :
           MediaType.parseMediaTypes(request.getHeader("Accept"))) {
        if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
          String exampleString =
              "{ \"relationTypes\" : [ \"stimulation\", \"stimulation\" ], \"name\" : \"Example Network\", \"organismCode\" : \"hsa\", \"numberOfNodes\" : 0, \"numberOfRelations\" : 6, \"UUID\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"nodeTypes\" : [ \"polypeptide chain\", \"polypeptide chain\" ], \"networkMappingType\" : \"REGULATORY\" }";
          ApiUtil.setExampleResponse(request, "application/json",
                                     exampleString);
          break;
        }
      }
    });
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }
}
