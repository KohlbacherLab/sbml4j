/**
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech) (5.0.1). https://openapi-generator.tech Do
 * not edit the class manually.
 */
package org.tts.api;

import io.swagger.annotations.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.UUID;
import javax.validation.Valid;
import javax.validation.constraints.*;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import org.tts.model.api.GeneAnalysisItem;
import springfox.documentation.annotations.ApiIgnore;
@javax.annotation.
Generated(value = "org.openapitools.codegen.languages.SpringCodegen",
          date = "2021-02-09T14:01:17.376485+01:00[Europe/Berlin]")
@Validated
@Api(value = "Analysis", description = "the Analysis API")
public interface AnalysisApi {

  default Optional<NativeWebRequest> getRequest() { return Optional.empty(); }

  /**
   * GET /geneAnalysis : Relation- and Pathway Analysis for a gene
   *
   * @param geneSymbol The geneSymbol for which the analysis should be fetched
   *     (required)
   * @return Bad Request (status code 400)
   *         or successful operation (status code 200)
   */
  @ApiOperation(value = "Relation- and Pathway Analysis for a gene",
                nickname = "getGeneAnalysis", notes = "",
                response = GeneAnalysisItem.class, responseContainer = "List",
                tags =
                    {
                        "analysis",
                    })
  @ApiResponses(value =
                {
                  @ApiResponse(code = 400, message = "Bad Request")
                  , @ApiResponse(code = 200, message = "successful operation",
                                 response = GeneAnalysisItem.class,
                                 responseContainer = "List")
                })
  @GetMapping(value = "/geneAnalysis", produces = {"application/json"})
  default ResponseEntity<List<GeneAnalysisItem>>
  getGeneAnalysis(@NotNull @ApiParam(
      value = "The geneSymbol for which the analysis should be fetched",
      required = true) @Valid @RequestParam(value = "geneSymbol",
                                            required = true)
                  String geneSymbol) {
    getRequest().ifPresent(request -> {
      for (MediaType mediaType :
           MediaType.parseMediaTypes(request.getHeader("Accept"))) {
        if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
          String exampleString =
              "{ \"gene\" : \"BRAF\", \"qualifier\" : [ { \"name\" : \"entrez-gene\", \"content\" : [ { \"type\" : \"BQB_HAS_VERSION\", \"url\" : [ \"http://example.com/aeiou\", \"http://example.com/aeiou\" ] }, { \"type\" : \"BQB_HAS_VERSION\", \"url\" : [ \"http://example.com/aeiou\", \"http://example.com/aeiou\" ] } ] }, { \"name\" : \"entrez-gene\", \"content\" : [ { \"type\" : \"BQB_HAS_VERSION\", \"url\" : [ \"http://example.com/aeiou\", \"http://example.com/aeiou\" ] }, { \"type\" : \"BQB_HAS_VERSION\", \"url\" : [ \"http://example.com/aeiou\", \"http://example.com/aeiou\" ] } ] } ], \"secondary names\" : [ \"MAPK21A\", \"MAPK21A\" ], \"pathways\" : [ { \"name\" : \"HIF-1 signaling pathway (Homo sapiens (human))\", \"KEGGId\" : \"path_hsa04066\", \"KEGGUrl\" : \"https://www.kegg.jp/kegg-bin/show_pathway?org_name=hsa&mapno=00620&mapscale=&show_description=show\" }, { \"name\" : \"HIF-1 signaling pathway (Homo sapiens (human))\", \"KEGGId\" : \"path_hsa04066\", \"KEGGUrl\" : \"https://www.kegg.jp/kegg-bin/show_pathway?org_name=hsa&mapno=00620&mapscale=&show_description=show\" } ], \"reactions\" : [ { \"catalysts\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ], \"sboTerm\" : \"sboTerm\", \"reversible\" : false, \"reactants\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ], \"name\" : \"rn:R04125\", \"type\" : \"biochemical reaction\", \"products\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ] }, { \"catalysts\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ], \"sboTerm\" : \"sboTerm\", \"reversible\" : false, \"reactants\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ], \"name\" : \"rn:R04125\", \"type\" : \"biochemical reaction\", \"products\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ] } ], \"relations\" : [ { \"sboTerm\" : \"SBO:0000170\", \"name\" : \"MAP2K\", \"type\" : \"stimulation\", \"direction\" : \"out\" }, { \"sboTerm\" : \"SBO:0000170\", \"name\" : \"MAP2K\", \"type\" : \"stimulation\", \"direction\" : \"out\" } ] }";
          ApiUtil.setExampleResponse(request, "application/json",
                                     exampleString);
          break;
        }
      }
    });
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }

  /**
   * GET /geneSet : provide a list of genes and get a network containing all
   * genes and their respective relations
   *
   * @param user The user which requests the creation (required)
   * @param geneSymbols The geneSymbols for which the analysis should be fetched
   *     (required)
   * @param UUID The UUID of the parent network to derive a new network from, if
   *     omitted the full model will be used (optional)
   * @param directed Boolean flag wether the resulting network-graph should be
   *     directed  (optional, default to false)
   * @return Network is empty or not available (status code 204)
   *         or successful operation (status code 200)
   *         or The current user is forbidden from accessing this data (status
   * code 403)
   */
  @ApiOperation(
      value =
          "provide a list of genes and get a network containing all genes and their respective relations",
      nickname = "getGeneSet", notes = "",
      response = org.springframework.core.io.Resource.class,
      tags =
          {
              "analysis",
          })
  @ApiResponses(
      value =
      {
        @ApiResponse(code = 204, message = "Network is empty or not available")
        ,
            @ApiResponse(code = 200, message = "successful operation",
                         response = org.springframework.core.io.Resource.class),
            @ApiResponse(
                code = 403,
                message =
                    "The current user is forbidden from accessing this data")
      })
  @GetMapping(value = "/geneSet", produces = {"application/octet-stream"})
  default ResponseEntity<org.springframework.core.io.Resource>
  getGeneSet(
      @ApiParam(value = "The user which requests the creation", required = true)
      @RequestHeader(value = "user", required = true) String user,
      @NotNull @ApiParam(
          value = "The geneSymbols for which the analysis should be fetched",
          required = true) @Valid @RequestParam(value = "geneSymbols",
                                                required = true)
      List<String> geneSymbols,
      @ApiParam(
          value =
              "The UUID of the parent network to derive a new network from, if omitted the full model will be used")
      @Valid @RequestParam(value = "UUID", required = false) UUID UUID,
      @ApiParam(
          value =
              "Boolean flag wether the resulting network-graph should be directed ",
          defaultValue = "false") @Valid
      @RequestParam(value = "directed", required = false,
                    defaultValue = "false") Boolean directed) {
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }

  /**
   * POST /geneSetAnalysis : Relation- and Pathway Analysis for a set of genes
   *
   * @param requestBody A json formatted and comma separated list of genes in
   *     the set to be analysed (required)
   * @return Bad Request (status code 400)
   *         or successful operation (status code 200)
   */
  @ApiOperation(value = "Relation- and Pathway Analysis for a set of genes",
                nickname = "getGeneSetAnalysis", notes = "",
                response = GeneAnalysisItem.class, responseContainer = "List",
                tags =
                    {
                        "analysis",
                    })
  @ApiResponses(value =
                {
                  @ApiResponse(code = 400, message = "Bad Request")
                  , @ApiResponse(code = 200, message = "successful operation",
                                 response = GeneAnalysisItem.class,
                                 responseContainer = "List")
                })
  @PostMapping(value = "/geneSetAnalysis", produces = {"application/json"},
               consumes = {"application/json"})
  default ResponseEntity<List<GeneAnalysisItem>>
  getGeneSetAnalysis(@ApiParam(
      value =
          "A json formatted and comma separated list of genes in the set to be analysed",
      required = true) @Valid @RequestBody List<String> requestBody) {
    getRequest().ifPresent(request -> {
      for (MediaType mediaType :
           MediaType.parseMediaTypes(request.getHeader("Accept"))) {
        if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
          String exampleString =
              "{ \"gene\" : \"BRAF\", \"qualifier\" : [ { \"name\" : \"entrez-gene\", \"content\" : [ { \"type\" : \"BQB_HAS_VERSION\", \"url\" : [ \"http://example.com/aeiou\", \"http://example.com/aeiou\" ] }, { \"type\" : \"BQB_HAS_VERSION\", \"url\" : [ \"http://example.com/aeiou\", \"http://example.com/aeiou\" ] } ] }, { \"name\" : \"entrez-gene\", \"content\" : [ { \"type\" : \"BQB_HAS_VERSION\", \"url\" : [ \"http://example.com/aeiou\", \"http://example.com/aeiou\" ] }, { \"type\" : \"BQB_HAS_VERSION\", \"url\" : [ \"http://example.com/aeiou\", \"http://example.com/aeiou\" ] } ] } ], \"secondary names\" : [ \"MAPK21A\", \"MAPK21A\" ], \"pathways\" : [ { \"name\" : \"HIF-1 signaling pathway (Homo sapiens (human))\", \"KEGGId\" : \"path_hsa04066\", \"KEGGUrl\" : \"https://www.kegg.jp/kegg-bin/show_pathway?org_name=hsa&mapno=00620&mapscale=&show_description=show\" }, { \"name\" : \"HIF-1 signaling pathway (Homo sapiens (human))\", \"KEGGId\" : \"path_hsa04066\", \"KEGGUrl\" : \"https://www.kegg.jp/kegg-bin/show_pathway?org_name=hsa&mapno=00620&mapscale=&show_description=show\" } ], \"reactions\" : [ { \"catalysts\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ], \"sboTerm\" : \"sboTerm\", \"reversible\" : false, \"reactants\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ], \"name\" : \"rn:R04125\", \"type\" : \"biochemical reaction\", \"products\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ] }, { \"catalysts\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ], \"sboTerm\" : \"sboTerm\", \"reversible\" : false, \"reactants\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ], \"name\" : \"rn:R04125\", \"type\" : \"biochemical reaction\", \"products\" : [ { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" }, { \"sboTerm\" : \"sboTerm\", \"name\" : \"C20H22N7O6\", \"type\" : \"compound\" } ] } ], \"relations\" : [ { \"sboTerm\" : \"SBO:0000170\", \"name\" : \"MAP2K\", \"type\" : \"stimulation\", \"direction\" : \"out\" }, { \"sboTerm\" : \"SBO:0000170\", \"name\" : \"MAP2K\", \"type\" : \"stimulation\", \"direction\" : \"out\" } ] }";
          ApiUtil.setExampleResponse(request, "application/json",
                                     exampleString);
          break;
        }
      }
    });
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }
}
